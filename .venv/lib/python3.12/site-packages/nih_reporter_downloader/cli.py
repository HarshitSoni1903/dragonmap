"""Command line interface for :mod:`nih_reporter_downloader`."""

import click

__all__ = [
    "main",
]


@click.command()
@click.option("--no-progress", is_flag=True, help="If given, turns off progress bars")
@click.option(
    "--threading/--no-threading",
    is_flag=True,
    default=False,
    help="Turns on threading to speed up downloading, but may cause issues with data integrity",
)
@click.option("--force", is_flag=True, help="Should the non-incremental files be re-download?")
@click.option(
    "--sample-rows",
    type=int,
    default=5,
    help="The number of sample rows to show",
    show_default=True,
)
def main(no_progress: bool, threading: bool, force: bool, sample_rows: int) -> None:
    """Download all of NIH RePORTER and show sample data."""
    import pandas
    from tabulate import tabulate

    from .api import PROJECTS_SUBSET, get_nih_reporter_data

    pack = get_nih_reporter_data(
        show_progress=not no_progress, use_threading=threading, force=force
    )

    def _echo(df: pandas.DataFrame) -> None:
        click.echo(tabulate(df.head(sample_rows).values, headers=df.columns, tablefmt="rst"))

    click.secho("\n\nProjects (subset of columns)", bold=True, fg="cyan")
    _echo(pack.projects[PROJECTS_SUBSET])

    if pack.abstracts is not None:
        click.secho("\n\nProject Abstracts", bold=True, fg="cyan")
        _echo(pack.abstracts)

    click.secho("\n\nPatents Data", bold=True, fg="cyan")
    _echo(pack.patents)

    click.secho("\n\nClinical Trials Data", bold=True, fg="cyan")
    _echo(pack.clinical_studies)

    click.secho("\nStudy Status Histogram", bold=True)
    study_status_counts = (
        pack.clinical_studies["Study Status"].value_counts().to_frame().reset_index()
    )
    _echo(study_status_counts)

    click.secho("\n\nLinks Data", bold=True, fg="cyan")
    _echo(pack.publication_links)


if __name__ == "__main__":
    main()
